@use "sass:math";
@use "sass:map";

/// メディアクエリ  (min‑width ベース = SPファースト)
$breakpoint: (
  sp: 'screen and (max-width: 767px)',
  tab: 'screen and (min-width: 768px)',
  pc: 'screen and (min-width: 1024px)'
);

@mixin mq($bp) {
  @media #{map-get($breakpoint, $bp)} {
   @content;
  }
}
//使用例 
//@include mq(tab) {
//  background-color: #ffbebe;
//}

//画面幅に合わせてpxをvwに変換する

$pcDesignSize: 1440;
$tabDesignSize: 768;
$spDesignSize: 375;

//PCデザイン用
@function pc-vw($pixelsVw) {
  @return math.div($pixelsVw , $pcDesignSize) * 100vw;
}

//tabletデザイン用
@function tab-vw($pixelsVw) {
  @return math.div($pixelsVw , $tabDesignSize) * 100vw;
}

//SPデザイン用
@function sp-vw($pixelsVw) {
  @return math.div($pixelsVw , $spDesignSize) * 100vw;
}

//pxをremに変換する関数
$root-size: 16; //htmlに設定してあるfont-size
@function rem($px) {
  @return math.div($px, $root-size) * 1rem;
}

// flexbox
// 使い方　@include fw.flexSet($align:flex-start, $justy:flex-start, $dir:row, $wrap:nowrap);
@mixin flexSet($align:flex-start, $justy:flex-start, $dir:row, $wrap:nowrap) {
  display        : flex;
  align-items    : $align;
  justify-content: $justy;
  flex-direction : $dir;
  flex-wrap      : $wrap;
}

// Angle Arrow
// 使い方　@include fw.arrow($width, $bold, $color, $deg);
@mixin arrow($width, $bold, $color, $deg) {
  border-style: solid;
  border-width: 0 #{$bold}px #{$bold}px 0;
  content: "";
  display: inline-block;
  position: absolute;
  height: #{$width}px;
  width: #{$width}px;
  //色
  border-color: $color;
  //角度
  @if ( $deg == "left" )        { transform: rotate(135deg); }
  @else if ( $deg == "top" )    { transform: rotate(225deg); }
  @else if ( $deg == "right" )  { transform: rotate(-45deg); }
  @else if ( $deg == "bottom" ) { transform: rotate(45deg);  }
}


///Min-Max-Value Interpolation
@function rclamp($min, $max, $minViewport, $maxViewport) {
  $vwScale: ($max - $min) / ($maxViewport - $minViewport);  // vw単位でのスケールを計算
  $baseOffset: $min - $minViewport * $vwScale;  // 基準となる最小値からのオフセットを計算

  $minRem: $min / 16;  // 最小値をremに変換
  $maxRem: $max / 16;  // 最大値をremに変換
  $baseOffsetRem: $baseOffset / 16;  // オフセットをremに変換
  $vwScaleRem: $vwScale * 100;  // vwスケールを調整

  @return clamp(#{$minRem}rem, #{$baseOffsetRem}rem + #{$vwScaleRem}vw, #{$maxRem}rem);
}

// 使用例
//.example {
//  font-size: rclamp(24, 64, 375, 1440);
//}